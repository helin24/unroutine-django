# Generated by Django 3.0.3 on 2020-07-08 03:23

from django.db import migrations
from sequences.generator import Generator

def populateFrequencies(apps, schema_editor):
    Sequence = apps.get_model('sequences', 'Sequence')
    Move = apps.get_model('sequences', 'Move')

    for sequence in Sequence.objects.filter(name__isnull=False).iterator():
        level = sequence.name.split('_')[0]
        transitions = Generator().transitionsWithFootFromSequence(sequence, True)
        for t in transitions:
            move = Move.objects.get(id=t.move.id)
            if level == 'gold':
                if sequence.isStep:
                    move.frequency_adult_gold_step += 1
                else:
                    move.frequency_adult_gold_nonstep += 1
            elif level == 'silver':
                if sequence.isStep:
                    move.frequency_adult_silver_step += 1
                else:
                    move.frequency_adult_silver_nonstep += 1
            elif level == 'bronze':
                if sequence.isStep:
                    move.frequency_adult_bronze_step += 1
                else:
                    move.frequency_adult_bronze_nonstep += 1

            move.save()

def undoPopulateFrequencies(apps, schema_editor):
    Move = apps.get_model('sequences', 'Move')

    for move in Move.objects.all().iterator():
        move.frequency_adult_gold_step = 0
        move.frequency_adult_gold_nonstep = 0
        move.frequency_adult_silver_step = 0
        move.frequency_adult_silver_nonstep = 0
        move.frequency_adult_bronze_step = 0
        move.frequency_adult_bronze_nonstep = 0
        move.save()


class Migration(migrations.Migration):

    dependencies = [
        ('sequences', '0016_auto_20200708_0322'),
    ]

    operations = [
        migrations.RunPython(populateFrequencies, undoPopulateFrequencies)
    ]
